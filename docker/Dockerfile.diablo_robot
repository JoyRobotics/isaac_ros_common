# Copyright (c) 2023-2024, JOY CORPORATION.  All rights reserved.
#
# JOY CORPORATION and its licensors retain all intellectual property
# and proprietary rights in and to this software, related documentation
# and any modifications thereto.  Any use, reproduction, disclosure or
# distribution of this software and related documentation without an express
# license agreement from JOY CORPORATION is strictly prohibited.

ARG BASE_IMAGE
FROM $BASE_IMAGE

# Set Proxy
# ENV VPN_DOMAIN=10.10.10.86:10080
ENV VPN_DOMAIN=10.10.10.106:10080
ENV HTTP_PROXY=http://${VPN_DOMAIN}
ENV HTTPS_PROXY=http://${VPN_DOMAIN}

RUN echo 'Acquire::http::Proxy "http://10.10.10.106:10080";' >> /etc/apt/apt.conf.d/01proxy && \
    echo 'Acquire::https::Proxy "http://10.10.10.106:10080";' >> /etc/apt/apt.conf.d/01proxy

RUN echo "use_proxy = on" >> /etc/wgetrc && \
    echo "http_proxy = http://10.10.10.106:10080" >> /etc/wgetrc && \
    echo "https_proxy = http://10.10.10.106:10080" >> /etc/wgetrc


# disable terminal interaction for apt
ENV DEBIAN_FRONTEND=noninteractive
ENV SHELL /bin/bash
SHELL ["/bin/bash", "-c"]

# Env setup
ENV SDK_ROOT=/opt/sdk
ENV ROS_LOG_DIR=/tmp/.ros/log

# install cmake„ÄÅcolcon etc.
RUN --mount=type=cache,target=/var/cache/apt \
apt-get update && apt-get install -y \
        cmake \
        pkg-config \
        swig \
        ros-humble-robot-localization \
        tmux \
        supervisor \
        ros-humble-isaac-ros-nvblox \
        tensorrt-libs \
        libv4l-dev \
        libyuv-dev \
        python3-libnvinfer-dev && \
        rosdep update && \
        rosdep install isaac_ros_nvblox

# Build YDLidar-SDK 
RUN --mount=type=cache,target=/var/cache/apt \
mkdir -p ${SDK_ROOT} && cd ${SDK_ROOT} \
&& rm -rf ./YDLidar-SDK \
&& git clone https://github.com/YDLIDAR/YDLidar-SDK.git && cd YDLidar-SDK && mkdir -p build && cd build \
&& cmake .. \
&& make \
&& make install

# Install redis & vison requirements
RUN python3 -m pip install -U \
        redis \
        pretrainedmodels \
        timm \
        lap \
        ultralytics==8.2.18 \
        lancedb \
        aiomysql \
        numpy==1.26.4


# source dependency & supervisor 
COPY scripts/*entrypoint.sh /usr/local/bin/scripts/
RUN  chmod +x /usr/local/bin/scripts/*.sh

# Copy middleware profiles
RUN mkdir -p /usr/local/share/middleware_profiles
COPY middleware_profiles/*profile.xml /usr/local/share/middleware_profiles/

ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
ENV CYCLONEDDS_URI=/usr/local/share/middleware_profiles/cyclonedds_profile.xml

# udev rules for orbbec
COPY udev_rules/99-orbbec-libusb-custom.rules /etc/udev/rules.d/99-orbbec-libusb-custom.rules

# unset proxy
RUN unset HTTP_PROXY HTTPS_PROXY

ENV HTTP_PROXY=""
ENV HTTPS_PROXY=""

RUN rm /etc/apt/apt.conf.d/01proxy

RUN sed -i '/http_proxy/d' /etc/wgetrc && \
    sed -i '/https_proxy/d' /etc/wgetrc && \
    sed -i '/use_proxy/d' /etc/wgetrc